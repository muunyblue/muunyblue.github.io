<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>もくもくブログ</title><link>https://muunyblue.github.io/</link><description></description><lastBuildDate>Thu, 16 Dec 2021 01:41:01 +0900</lastBuildDate><item><title>普通のキーボード写真とBLEの話</title><link>https://muunyblue.github.io/97885afd60c10c4a454c11e225763e04.html</link><description>&lt;p&gt;&lt;a href="https://adventar.org/calendars/6470"&gt;KEEB_PD Advent Calendar 2021&lt;/a&gt;の16日目の記事です。&lt;/p&gt;
&lt;p&gt;はじめまして、&lt;a href="https://twitter.com/_y_y_m_m_"&gt;yymm&lt;/a&gt;と申します。
BLE Micro …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 16 Dec 2021 01:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2021-12-16:/97885afd60c10c4a454c11e225763e04.html</guid><category>Keyboard</category></item><item><title>React Hooks: useReducer &amp; Context API with TypeScript</title><link>https://muunyblue.github.io/8eb51d0a68e9373df41f88e5b551d4a3.html</link><description>&lt;p&gt;最近React Hooksに入門してみていて、reduxを意識したuseReducerというAPIと
Context APIが気になったので素振りしてみました。&lt;/p&gt;
&lt;p&gt;あとFunctionalに書けるHooksとTypeScriptは相性が良いのではないかと思ったので
すべてTypeScriptで書いていきます。&lt;/p&gt;
&lt;h1&gt;canvas animation framework …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 24 May 2019 01:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2019-05-24:/8eb51d0a68e9373df41f88e5b551d4a3.html</guid><category>React</category><category>Hooks</category><category>TypeScript</category></item><item><title>普通のTwitter転職</title><link>https://muunyblue.github.io/214cfbe603b7f9f9bc005d5f53f7a1d3.html</link><description>&lt;p&gt;インフルを発症してだいぶ落ち着いてきたので転職エントリでも書いてみることにしました。&lt;/p&gt;
&lt;p&gt;よくありそうな受託開発の会社からスタートアップへの転職話です。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;私は大学の頃に物理学を選考していて、複雑怪奇な数式を見ると妙にテンションが上ってしまうような
性分であったので受託開発時代は主に数値計算系の業務をしていました。
使用していた主な言語は頻度順に、C、C++、Fortranです。&lt;/p&gt;
&lt;p&gt;ちなみに私は大学の頃すごく理解度が低いままC言語を書いてしまっていたので …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 23 Jan 2019 21:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2019-01-23:/214cfbe603b7f9f9bc005d5f53f7a1d3.html</guid><category>Poem</category></item><item><title>Zen Keyboard Build log</title><link>https://muunyblue.github.io/3a1f85dfef891b2a3685ccb35efa807e.html</link><description>&lt;p&gt;&lt;img alt="Zen Keyboard" src="https://pbs.twimg.com/media/Dk7SEiLU8AAAqTr.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Zen Keyboard LED" src="https://pbs.twimg.com/media/DlFqdWxU8AA1VlS.jpg"&gt;&lt;/p&gt;
&lt;p&gt;LEDの輝きと黒の透過キーキャップを活かして中二ぽい感じに仕上げてみました。&lt;/p&gt;
&lt;p&gt;自分が感じたZen Keyboardの特徴です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キー数は62keysで自作キーボードの中では過不足ない部類&lt;/li&gt;
&lt;li&gt;設計者が日本人でないため少し大きめ（親指の位置はErgoDoxと同様）&lt;/li&gt;
&lt;li&gt;バックライトが使える&lt;/li&gt;
&lt;li&gt;PCBのみで形成されている&lt;ul&gt;
&lt;li&gt;bottomのPCBプレートが最下面なので厚みが最小限に抑えられ薄い&lt;/li&gt;
&lt;li&gt;アクリルに比べると硬いので打鍵時にぐらつきなどが少なく安定している …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 22 Aug 2018 13:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2018-08-22:/3a1f85dfef891b2a3685ccb35efa807e.html</guid><category>Keyboard</category><category>Zen</category></item><item><title>Minidoxビルドログ</title><link>https://muunyblue.github.io/4bfbd52f4e8466dc12aaf30b7e057b66.html</link><description>&lt;p&gt;まっしろMinidoxを作りました。かわいい。&lt;/p&gt;
&lt;p&gt;&lt;img alt="White Minidox" src="https://pbs.twimg.com/media/DknbeqPUYAEm4cM.jpg"&gt;&lt;/p&gt;
&lt;p&gt;ちょっと前に&lt;a href="https://booth.pm/ja/items/718976"&gt;Boothで販売していたMinidoxのPCB&lt;/a&gt;を購入していまたのですがやっと組み立て追わったのでビルドログを残しておきます。&lt;/p&gt;
&lt;h1&gt;組み立て編&lt;/h1&gt;
&lt;p&gt;[https://twitter.com/y_y_m_m …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 17 Aug 2018 13:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2018-08-17:/4bfbd52f4e8466dc12aaf30b7e057b66.html</guid><category>Keyboard</category><category>Minidox</category></item><item><title>Neovim/Vim8で快適Vue.js開発(Vue Language Server)</title><link>https://muunyblue.github.io/520bae6649b42ff5a3c8c58b7fcfc5a9.html</link><description>&lt;p&gt;&lt;a href="https://muunyblue.github.io/48dd34fa4a5fc8e0045aba1952e1818e.html"&gt;VimでLanguage Serverを活用する(Rust, Vue.js)&lt;/a&gt;で中途半端にしていたVue.js開発がほぼ完成したのでまとめます。&lt;/p&gt;
&lt;p&gt;&lt;img alt="vls" src="images/vls.gif"&gt;&lt;/p&gt;
&lt;p&gt;これでVSCode+Veturと同等にVue.js開発ができます …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 16 Jan 2018 10:32:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2018-01-16:/520bae6649b42ff5a3c8c58b7fcfc5a9.html</guid><category>Vim</category><category>Neovim</category><category>Vue.js</category></item><item><title>VimでLanguage Serverを活用する(Rust, Vue.js)</title><link>https://muunyblue.github.io/48dd34fa4a5fc8e0045aba1952e1818e.html</link><description>&lt;p&gt;遅刻しましたが &lt;a href="https://qiita.com/advent-calendar/2017/vim2"&gt;Vim2 Advent Calendar 2017&lt;/a&gt; 22日目の記事です。&lt;/p&gt;
&lt;p&gt;VSCodeを使っていると知らない間にお世話になっていたりするLanguage Server Protcol(LSP …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Sat, 23 Dec 2017 00:56:58 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-12-23:/48dd34fa4a5fc8e0045aba1952e1818e.html</guid><category>Vim</category><category>Neovim</category><category>Rust</category><category>Vue.js</category></item><item><title>rustifyでWebAssembly - ライフゲームを作る</title><link>https://muunyblue.github.io/35d58f24d7a7701719c983a1ef1979b1.html</link><description>&lt;p&gt;&lt;a href="https://muunyblue.github.io/8eec1a372e8a99076315db9ea4d24b2c.html"&gt;rustifyで簡単WebAssemblyしてみる&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;続編です、もう少し実践的なライフゲームを作ってみました。&lt;/p&gt;
&lt;p&gt;[https://github.com/yymm/rustify-game-of-life:embed]&lt;/p&gt;
&lt;h1&gt;Demo …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 11 Dec 2017 14:32:15 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-12-11:/35d58f24d7a7701719c983a1ef1979b1.html</guid><category>Rust</category><category>WebAssembly</category></item><item><title>rustifyで簡単WebAssemblyしてみる</title><link>https://muunyblue.github.io/8eec1a372e8a99076315db9ea4d24b2c.html</link><description>&lt;p&gt;WebAssembly(以下WASM)には興味があって遊んでみたいと思っていたら、rustifyという便利な魔法が先日GitHubに現れたので使ってみました。&lt;/p&gt;
&lt;p&gt;続編のほうが詳しいです =&amp;gt; &lt;a href="https://muunyblue.github.io/35d58f24d7a7701719c983a1ef1979b1.html"&gt;rustifyでWebAssembly - ライフゲームを作る&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ElectronでWASMを使ってランダムウォークをしてみます。&lt;/p&gt;
&lt;p&gt;[https://github …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 05 Dec 2017 16:45:31 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-12-05:/8eec1a372e8a99076315db9ea4d24b2c.html</guid><category>rust</category><category>WebAssembly</category></item><item><title>VC++と和解する</title><link>https://muunyblue.github.io/2e255d2d6bf9bb33030246d31f1a79ca.html</link><description>&lt;iframe id="vc++"
    title="vc++"
    width="100%"
    height="600px"
    src="https://goo.gl/HQbPeS"&gt;
&lt;/iframe&gt;

&lt;p&gt;VC++のコンソールアプリケーションが自動生成するファイルについてとMSBuildの話である。&lt;/p&gt;
&lt;p&gt;Intelコンパイラなどのサードパーティコンパイラを使用することについても書いてある。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Oct 2017 15:27:59 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-10-12:/2e255d2d6bf9bb33030246d31f1a79ca.html</guid><category>C++</category></item><item><title>FlaskとVue.jsを組み合わせて使う</title><link>https://muunyblue.github.io/0b7acbba52fb92b2e9c818f7f56bac99.html</link><description>&lt;p&gt;&lt;a href="https://flaskvuejs.herokuapp.com/"&gt;&lt;img alt="" src="https://gyazo.com/e4eef5fccd7dd141ad7955fadd873e8b.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://flaskvuejs.herokuapp.com/" title="flask-vue.js demo"&gt;flask-vue.js demo&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/yymm/flask-vuejs" title="yymm/flask-vuejs: Example &amp;amp; Tips, Flask with Vue.js."&gt;yymm/flask-vuejs: Example &amp;amp; Tips, Flask with Vue …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Sun, 01 Oct 2017 15:45:59 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-10-01:/0b7acbba52fb92b2e9c818f7f56bac99.html</guid><category>Python</category><category>Flask</category><category>Vue.js</category></item><item><title>OpenMPによるfor文の並列化</title><link>https://muunyblue.github.io/f4f4a06c589ea53edf4a9b18e70bbd40.html</link><description>&lt;p&gt;OpenMPには、forの並列化とsectionによる並列化がありますが、forの並列化のみを扱います。&lt;/p&gt;
&lt;p&gt;OpenMPに関する仕様に関しては、&lt;a href="http://www.cc.u-tokyo.ac.jp/support/kosyu/03/kosyu-openmp_c.pdf" title="kosyu-openmp_c.pdf"&gt;kosyu-openmp_c.pdf&lt;/a&gt;を読んで勉強します、よくまとまっているのであとあとリファレンスとしても使えます。&lt;/p&gt;
&lt;p&gt;以下、&lt;a href="https://www.isus.jp/products/c-compilers/32-openmp-traps/" title="C++ 開発者が陥りやすい OpenMP* の 32 の罠 | iSUS"&gt;C …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 21 Sep 2017 15:45:59 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-09-21:/f4f4a06c589ea53edf4a9b18e70bbd40.html</guid><category>C</category><category>C++</category></item><item><title>LocalStorageで誰でも安全にMarkdownでスライドやメモ作れるサービス作ったよ</title><link>https://muunyblue.github.io/823b2d10224a6a29f91fc7c0f46f1b8e.html</link><description>&lt;h1&gt;Locks&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://yymm.github.io/locks/#/"&gt;&lt;img alt="" src="https://github.com/yymm/locks/raw/master/screenshot/locks.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;スライド作るときPowerPointやKeynoteでも良いけどインストールされてないとか好みじゃないとかMarkdownで書きたいときあります。&lt;/p&gt;
&lt;p&gt;でもWebサービスとかだと外部のサーバにデータ乗るかもしれないし機密情報とかのせられない・・・みたいなときに使うツールということで作りました。&lt;/p&gt;
&lt;p&gt;[https://yymm.github.io/locks/#/:embed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 21 Sep 2017 12:58:03 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-09-21:/823b2d10224a6a29f91fc7c0f46f1b8e.html</guid><category>Vue</category><category>JavaScript</category><category>CSS</category></item><item><title>CodeMirrorでEmoji AutoCompleteをする</title><link>https://muunyblue.github.io/502317c9b4695a9476eb981d5fdf43a8.html</link><description>&lt;p&gt;":"に続けて打ち込むと自動で補完してくれるようになります。&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" src="https://gyazo.com/68de503622f29ed4213c201a75b870c1.gif"&gt;&lt;/p&gt;
&lt;p&gt;EmojiリストはGitHub APIから取得しています。&lt;/p&gt;
&lt;h1&gt;必要なパッケージ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;CodeMirror&lt;/li&gt;
&lt;li&gt;show-hint addonのコードを編集するのでソースコードが必要&lt;/li&gt;
&lt;li&gt;Axios&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;パッケージの読み込み方法は各自におまかせします(scriptタグでもビルドツールでも構いません …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 07 Sep 2017 09:43:03 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-09-07:/502317c9b4695a9476eb981d5fdf43a8.html</guid><category>JavaScript</category></item><item><title>玉葱醤油をご存知だろうか?</title><link>https://muunyblue.github.io/76b605730bd2606bbcb290f1244dac9a.html</link><description>&lt;p&gt;うまいのでみんな買うと良い。&lt;/p&gt;
&lt;h1&gt;玉葱醤油とは&lt;/h1&gt;
&lt;p&gt;[http://www.jakitamirai.or.jp/nousankakouhintop/kakouhin01/:embed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 07 Sep 2017 09:11:30 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-09-07:/76b605730bd2606bbcb290f1244dac9a.html</guid><category>Sho-yu</category></item><item><title>Neovim + deoplete.nvimでVue + TypeScriptの補完ができるようになりました</title><link>https://muunyblue.github.io/a7ce4026f43a4491f1284bb38d96f440.html</link><description>&lt;p&gt;nvim-typescriptを使用する方法ではできなかったので出来るように頑張りました。&lt;/p&gt;
&lt;p&gt;(他に代替出来る方法を教えていただいたの最後の方で紹介します。)&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" src="https://user-images.githubusercontent.com/1256685/29148673-f6238c3a-7da9-11e7-84ee-f075adba0390.gif"&gt;&lt;/p&gt;
&lt;p&gt;Vueファイル内で、html, typescript, cssの補完が良い感じに効くようになりました。&lt;/p&gt;
&lt;h1&gt;やり方&lt;/h1&gt;
&lt;p&gt;deoplete.vimとcontext_filetype.vim …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 10 Aug 2017 11:42:03 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-08-10:/a7ce4026f43a4491f1284bb38d96f440.html</guid><category>Vue</category><category>TypeScript</category></item><item><title>Vue.jsで縦横拡張可変グリッド</title><link>https://muunyblue.github.io/0b01c7d68feb22290f3b0da91bef689d.html</link><description>&lt;p&gt;CodePenエディタのような可変グリッドで、拡張可能なグリッドがほしかったので作ってみました。&lt;/p&gt;
&lt;p&gt;[https://github.com/yymm/grid.vue:embed]&lt;/p&gt;
&lt;p&gt;&lt;img alt="demo" src="https://github.com/yymm/grid.vue/raw/master/capture.gif"&gt;&lt;/p&gt;
&lt;h1&gt;詳しい話 …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 14 Jul 2017 02:52:47 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-07-14:/0b01c7d68feb22290f3b0da91bef689d.html</guid><category>Vue.js</category><category>CSS</category></item><item><title>艦これ2017冬イベE-1甲 伊26 Mマス掘り</title><link>https://muunyblue.github.io/25d9e7c1134b5a3744cd1dea4072d6a2.html</link><description>&lt;p&gt;伊26ほしいです。伊26がほしいです。&lt;/p&gt;
&lt;p&gt;Iマスでも掘れますがIマスまで行くのに時間かかるのでMマスで掘ることにしてみました。&lt;/p&gt;
&lt;p&gt;401やUが欲しい場合はIマスに行きましょう。&lt;/p&gt;
&lt;h1&gt;編成&lt;/h1&gt;
&lt;p&gt;A勝利時は何も落ちない場合がほとんどなので、S勝利じゃないとドロップしない気がします。&lt;/p&gt;
&lt;p&gt;戦艦は含めることができないので、ヲ級改flagshipを倒すために雷巡の開幕魚雷と夜戦を使います。&lt;/p&gt;
&lt;p&gt;&lt;img alt="編成" src="https://i.gyazo.com/1d096829ee8477166c206ff7a13342b2.png"&gt;&lt;/p&gt;
&lt;p&gt;後述する基地航空隊とこの編成でS勝利安定しています …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 24 Feb 2017 05:43:38 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-02-24:/25d9e7c1134b5a3744cd1dea4072d6a2.html</guid><category>KanColle</category></item><item><title>Vimで始める型付きPython3開発</title><link>https://muunyblue.github.io/6afd3a1bbb557f8e05f45ded7bf96836.html</link><description>&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/675774830708de1e6282eaa2ecc577dd.gif"&gt;&lt;/p&gt;
&lt;p&gt;型付きPythonは静的型解析ツールであるmypyによる検査と、jediによる補完が効くという開発に役立つ便利な恩恵があります。&lt;/p&gt;
&lt;p&gt;実行時には(まだ)型の恩恵はないですが始めるには十分な恩恵だと感じたので始めてみました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;venvとmypyを使うので、Python3と言ってもPython3.5(現在の最新版)を使います …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 23 Jan 2017 01:48:13 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-01-23:/6afd3a1bbb557f8e05f45ded7bf96836.html</guid><category>Python</category><category>Vim</category><category>Neovim</category></item><item><title>ErgoDoxを混合軸にした話</title><link>https://muunyblue.github.io/f0bbf5fb2b067fda7b491dc2307411e4.html</link><description>&lt;p&gt;&lt;a href="http://qiita.com/advent-calendar/2016/ergodox" title="ErgoDox Advent Calendar 2016 - Qiita"&gt;ErgoDox Advent Calendar 2016&lt;/a&gt;の25日目の記事になります。もう1月ですがなぜか25日だけ空いていたので飛び込み参加しました。&lt;/p&gt;
&lt;p&gt;もともとGREETECH赤軸だったのですが、GATERONの緑軸を購入してまぜまぜしました。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://pbs.twimg.com/media/C17ogQmUkAAZQ9i.jpg"&gt;&lt;/p&gt;
&lt;h1&gt;経緯&lt;/h1&gt;
&lt;p&gt;MX軸は初めてというのもあって …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 18 Jan 2017 00:18:20 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-01-18:/f0bbf5fb2b067fda7b491dc2307411e4.html</guid><category>ErgoDox</category></item><item><title>Isomorphic Javascript 開発話 in 2016 (Koa + React + Material-UI)</title><link>https://muunyblue.github.io/7792b558ca0c76d24d695582021ac501.html</link><description>&lt;p&gt;去年(2016年8月頃)、社内で使う電話帳blacklistアプリをIsomorphic Javascriptで作りながらWikiにまとめていた開発話が面白い感じになっていたのでその転載です。&lt;/p&gt;
&lt;p&gt;GitLab上で開発していたのでJavascript以外にもGitLab CIの話もあります。&lt;/p&gt;
&lt;h1&gt;開発話&lt;/h1&gt;
&lt;p&gt;Reactを使用して楽をしたいので、開発言語はNode.jsを選択 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 17 Jan 2017 04:18:14 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-01-17:/7792b558ca0c76d24d695582021ac501.html</guid><category>Node.js</category><category>Javascript</category><category>React</category></item><item><title>zsh -&gt; fish 移行プロセス</title><link>https://muunyblue.github.io/7476533956dd3568c1d787c5d33a547f.html</link><description>&lt;p&gt;込み入った設定をしないでｽｯと移行することを目的にしています。&lt;/p&gt;
&lt;h1&gt;.zshrcを投げ捨ててます。&lt;/h1&gt;
&lt;p&gt;自分の場合、zshrcの設定内容にコピー&amp;amp;ペーストが多かったので気持ち的に楽に投げ捨てられました。&lt;/p&gt;
&lt;h1&gt;fishのインストール&lt;/h1&gt;
&lt;p&gt;主要なOSのパッケージマネージャーでインストール可能なのでｽｯとインストールします。&lt;/p&gt;
&lt;h1&gt;fishermanを導入&lt;/h1&gt;
&lt;p&gt;fishのプラグインマネージャーです。&lt;a href="https://github.com/fisherman/fisherman/wiki/Oh-My-Fish-Plugins---Known-Issues" title="Oh My Fish Plugins Known Issues · fisherman/fisherman Wiki"&gt;oh-my-fishとも互換性があります …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 16 Jan 2017 01:38:38 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-01-16:/7476533956dd3568c1d787c5d33a547f.html</guid><category>fish</category></item><item><title>deoplete.nvimが効かなくなった時の手元できる対処法</title><link>https://muunyblue.github.io/a3ce63a7a8521c37a513db67129855a8.html</link><description>&lt;p&gt;開発中なのもありよく動かなくなっているので試したことリストの備忘録です。&lt;/p&gt;
&lt;p&gt;公式でもなく完全な対処方法であるかの確認もしてないので参考程度にして下さい。この方法で解決できない場合はIssueかなぁという判断基準にはなるかもしれません。&lt;/p&gt;
&lt;p&gt;順番や番号に意味はありません。&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;1. プラグインのアップデート&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;:call dein#update …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Jan 2017 03:00:32 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2017-01-12:/a3ce63a7a8521c37a513db67129855a8.html</guid><category>Neovim</category></item><item><title>Neovimはじめました &amp; 2016年vimrc大掃除</title><link>https://muunyblue.github.io/c95d62c68196b2d0c1c1de8c7eeb6d50.html</link><description>&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/1089d23c5abf4d0cf038f597d3ee64a5.png"&gt;&lt;/p&gt;
&lt;p&gt;11月あたりからvim環境を見直して概ねまとまってきたのでメモとして残しておきます。&lt;/p&gt;
&lt;p&gt;概要は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neovim導入&lt;/li&gt;
&lt;li&gt;プラグイン整理(neobundle =&amp;gt; dein.vim)&lt;/li&gt;
&lt;li&gt;Neovim/Vim/Nyaovim対応 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 27 Dec 2016 04:36:50 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-12-27:/c95d62c68196b2d0c1c1de8c7eeb6d50.html</guid><category>neovim</category><category>vim</category></item><item><title>ステラのまほうのエンディングで始めるThree.js</title><link>https://muunyblue.github.io/f7a124943b6aa6654d787f07eee84d2c.html</link><description>&lt;p&gt;この記事は、&lt;a href="http://qiita.com/advent-calendar/2016/threejs" title="Three.js Advent Calendar 2016 - Qiita"&gt;Three.js Advent Calendar 2016&lt;/a&gt; 9日目の記事です。&lt;/p&gt;
&lt;p&gt;たまたま空いていたので、&lt;a href="http://www.adventar.org/calendars/1454#list-2016-12-05" title="まんがタイムきらら Advent Calendar 2016 - Adventar"&gt;まんがタイムきらら Advent …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 08 Dec 2016 10:02:09 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-12-08:/f7a124943b6aa6654d787f07eee84d2c.html</guid><category>Three.js</category><category>WebGL</category></item><item><title>氷パ考察 ダブルバトル</title><link>https://muunyblue.github.io/e6d76b26416ca5de309d8fd741894447.html</link><description>&lt;h1&gt;運用例&lt;/h1&gt;
&lt;p&gt;実践中...&lt;/p&gt;
&lt;p&gt;(情報は随時更新していきます)&lt;/p&gt;
&lt;h1&gt;ユキメノコ&lt;/h1&gt;
&lt;p&gt;@ひかりのこな おくびょう ゆきがくれ CS252&lt;/p&gt;
&lt;p&gt;かなしばり/でんじは …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 16 Sep 2016 06:46:49 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-16:/e6d76b26416ca5de309d8fd741894447.html</guid><category>Pokemon</category></item><item><title>Xubuntu 16.04 初期設定</title><link>https://muunyblue.github.io/99113167f3b816bdeb56ff1af6cec7af.html</link><description>&lt;p&gt;ASUS Eee PC X101CHにXubuntuをインストールした際の設定です。&lt;/p&gt;
&lt;p&gt;Xubuntuは軽量デスクトップのXfce4を使っていてマシンスペックの低いPC向けで、使ってみた感じ欲しい設定は一通りそろっていて使いやすい印象があります。&lt;/p&gt;
&lt;p&gt;この記事では見た目や最低限使うための設定について書きます。&lt;/p&gt;
&lt;p&gt;これ以外に開発用にTerminalで設定している項目がありますがVimだけにとどめてあります。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;p&gt;[TOC …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 15 Sep 2016 04:19:10 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-15:/99113167f3b816bdeb56ff1af6cec7af.html</guid><category>Xubuntu</category></item><item><title>Vim使いがVSCodeを始める例</title><link>https://muunyblue.github.io/274895fd4fa237a59a5a2f2aab135e5e.html</link><description>&lt;p&gt;Vimに比べるとVSCodeのほうが引き継ぎのときに楽なのではと思い立ちVSCodeをはじめてみます。&lt;/p&gt;
&lt;h1&gt;エディタに求めていること&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/307d663020d4557260bbbc6bfe45de13.png"&gt;&lt;/p&gt;
&lt;p&gt;素VSCodeを眺めて普段エディタに求めている最低限のことについて考えてみます。&lt;/p&gt;
&lt;p&gt;基礎として理解しておきたい部分&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プラグイン機構&lt;/li&gt;
&lt;li&gt;プラグインでできることと設定でできることの境目&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;求めること&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vimキーバインド&lt;/li&gt;
&lt;li&gt;File Tree …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 14 Sep 2016 05:30:51 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-14:/274895fd4fa237a59a5a2f2aab135e5e.html</guid><category>VSCode</category></item><item><title>RustでGtk+ 3.x</title><link>https://muunyblue.github.io/b84a25d15d9d44f58640a485c1387df8.html</link><description>&lt;p&gt;&lt;a href="https://github.com/gtk-rs/gtk" title="gtk-rs/gtk: GTK+ 3.x bindings and wrappers for Rust"&gt;gtk-rs/gtk: GTK+ 3.x bindings and wrappers for Rust …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 13 Sep 2016 02:03:08 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-13:/b84a25d15d9d44f58640a485c1387df8.html</guid><category>Rust</category><category>Gtk+</category></item><item><title>Xubuntu 16.04 日本語入力(fcitx-mozc)</title><link>https://muunyblue.github.io/3faf3b08de6c7c130e63c0e38e5553a8.html</link><description>&lt;p&gt;"Settings &amp;gt; Language Supprt"を開きます。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/546b65fd866a3a377279be2f577883e1.png"&gt;&lt;/p&gt;
&lt;p&gt;"Install / Remove Languages"でJapaneseを選択します。&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/1b1a31e8bf5c62c3eabce3e73741b8c5.png"&gt;&lt;/p&gt;
&lt;p&gt;Applyすると、デフォルトでfcitxとfcitx-mozcがインストールされます …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 13 Sep 2016 00:42:18 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-13:/3faf3b08de6c7c130e63c0e38e5553a8.html</guid><category>Xubuntu</category></item><item><title>Gentooのインストール : Retry Gentoo 2</title><link>https://muunyblue.github.io/3bb39baf42957397d3fae8e0e66b6554.html</link><description>&lt;p&gt;幾つかLinuxをインストールした経験がないとGentooのインストールは非常に難しいので、前提として多少の知識がある方がインストールをすると思います。&lt;/p&gt;
&lt;p&gt;ので、コマンドと変更したファイルの内容をずらずらと書いていきます。&lt;/p&gt;
&lt;p&gt;~~色気が...ない...~~&lt;/p&gt;
&lt;p&gt;インストールメディアは前回作成したUSBメモリを使います。&lt;/p&gt;
&lt;p&gt;前回 =&amp;gt; &lt;a href="http://blog.muuny-blue.info/8a2d334536b2f4146af8cf46acd85110.html" title="下準備 &amp;amp; インストールUSB作成(Macで) : Retry Gentoo 1"&gt;下準備 &amp;amp; インストールUSB作成 …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 05 Sep 2016 07:25:34 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-05:/3bb39baf42957397d3fae8e0e66b6554.html</guid><category>Gentoo</category></item><item><title>下準備 &amp; インストールUSB作成(Macで) : Retry Gentoo 1</title><link>https://muunyblue.github.io/8a2d334536b2f4146af8cf46acd85110.html</link><description>&lt;p&gt;3,4年前にgentooに挑戦して挫折しましたが、再び挑戦してみます。&lt;/p&gt;
&lt;h1&gt;下準備&lt;/h1&gt;
&lt;h2&gt;資料&lt;/h2&gt;
&lt;p&gt;公式のハンドブックが日本語訳もついていて良い感じなのでこれを読みながらインストールを進めていきます。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://wiki.gentoo.org/wiki/Handbook:Main_Page/ja" title="ハンドブック:メインページ - Gentoo Wiki"&gt;ハンドブック:メインページ - Gentoo Wiki …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 02 Sep 2016 03:49:19 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-09-02:/8a2d334536b2f4146af8cf46acd85110.html</guid><category>Gentoo</category></item><item><title>GitLab CIならWindowsでのCIも簡単</title><link>https://muunyblue.github.io/2d5b53f80151aea5fef0722f8b1edf99.html</link><description>&lt;p&gt;WindowsでビルドやテストをするようなCIがGitLab CIで簡単に構成できるので紹介します。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/015389e74278202135dd6ed947ed32da.html" title="簡単にわかるGitLab CIの仕組み"&gt;簡単にわかるGitLab CIの仕組み&lt;/a&gt;で書いたように&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;GitLab RunnerはGitLab本体とは分離して別マシンや別コンテナに配置して、GitLabとGitLab Runner間はAPIで通信する仕組みになっています。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ということなので …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 16 Aug 2016 05:19:04 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-08-16:/2d5b53f80151aea5fef0722f8b1edf99.html</guid><category>GitLab</category><category>CI</category><category>Windows</category></item><item><title>MacでVagrant上のVMを自動起動する方法</title><link>https://muunyblue.github.io/691f73fdf1c5edeb3f600c515715a358.html</link><description>&lt;p&gt;VM上にある開発サーバとかを自動起動したいのでやってみました。&lt;/p&gt;
&lt;p&gt;~/Library/LaunchAgentsに好きな名前のplistファイルを作成します(ここではvagrant.startup.plist)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;&amp;lt;?xml version=&amp;quot;1.0 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 10 Aug 2016 02:36:19 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-08-10:/691f73fdf1c5edeb3f600c515715a358.html</guid><category>Vagrant</category></item><item><title>簡単にわかるGitLab CIの仕組み</title><link>https://muunyblue.github.io/015389e74278202135dd6ed947ed32da.html</link><description>&lt;p&gt;&lt;a href="http://docs.gitlab.com/ce/ci/quick_start/README.html" title="GitLab Documentation"&gt;GitLab CIのquick start&lt;/a&gt;を読んでもしっくり来なかった人向けにGitLab CIの仕組みをまとめました。&lt;/p&gt;
&lt;p&gt;特に「Runnerって何?」ってなった人向けです。&lt;/p&gt;
&lt;p&gt;(※GitLab CIの導入方法や使い方については触れていません …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 09 Aug 2016 01:52:39 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-08-09:/015389e74278202135dd6ed947ed32da.html</guid><category>GitLab</category><category>CI</category></item><item><title>CentOSにCppcheckをRPMでインストールする方法</title><link>https://muunyblue.github.io/6e71d53b8718fd5c285f6a1e12622bdd.html</link><description>&lt;p&gt;Cppcheckはとても優れたツールですが、Windowsで使用する場合はSetupがありますが、Linuxで使用する場合は手動でのインストールになります。&lt;/p&gt;
&lt;p&gt;ソースコードをダウンロードしてビルドすれば良いのですが、ビルドするツールをインストールできない場合などビルド困難な場合がありますので、RPMパッケージをインストールする方法を紹介します。&lt;/p&gt;
&lt;p&gt;!!! note
    1つ注意なのは、RPMパッケージでインストールするため必ずしも最新版のCppcheckを使えるわけではありません、新しいCppcheckがどうしても使いたい場合はソースコードからビルドしましょう …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 28 Jul 2016 03:37:05 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-07-28:/6e71d53b8718fd5c285f6a1e12622bdd.html</guid><category>Cppcheck</category></item><item><title>react-routerをCDNのみで使う</title><link>https://muunyblue.github.io/b1f130b49d0fcfa2348098ee4467452f.html</link><description>&lt;p&gt;この記事は、npm非依存でReactを使ったWebフロントエンド開発をしたい方向けです。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/reactjs/react-router" title="GitHub - reactjs/react-router: A complete routing library for React"&gt;GitHub - reactjs/react-router: A complete routing library for …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 19 Jul 2016 00:52:26 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-07-19:/b1f130b49d0fcfa2348098ee4467452f.html</guid><category>React</category><category>Flask</category></item><item><title>Rustのturbofish</title><link>https://muunyblue.github.io/6dfc35c47756e962ef055d1049f1f8ec.html</link><description>&lt;p&gt;リファレンスやドキュメントで時々出会う turbofish とは、"::&amp;lt;&amp;gt;"のこと&lt;/p&gt;
&lt;p&gt;[https://twitter.com/hermanradtke/status/628270459046379520 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 05 Jul 2016 05:00:46 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-07-05:/6dfc35c47756e962ef055d1049f1f8ec.html</guid><category>Rust</category></item><item><title>RustでFibonacci数列を書いて学ぶ</title><link>https://muunyblue.github.io/115c51eb37365df2d4f4e2482b964822.html</link><description>&lt;p&gt;&lt;a href="https://rust-lang-ja.github.io/the-rust-programming-language-ja/1.6/book/" title="プログラミング言語Rust"&gt;プログラミング言語Rust&lt;/a&gt;を一通り読んだのでまずFibonacci数列書いてみたメモです。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Table Of Contents&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;準備&lt;/h1&gt;
&lt;p&gt;Fibonacci以外にも色々やっていく予定なので、Rustの勉強用リポジトリを作ります。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ cargo …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 05 Jul 2016 03:32:08 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-07-05:/115c51eb37365df2d4f4e2482b964822.html</guid><category>Rust</category></item><item><title>Ergodoxの良さを語ってきた</title><link>https://muunyblue.github.io/a2369958a9645eac52b58a8134e2ef5a.html</link><description>&lt;p&gt;買って2ヶ月近く経ったのとErgodox使ってると最高感しかないので、社内勉強会でErgodoxの良さを語ってきました。&lt;/p&gt;
&lt;p&gt;[https://speakerdeck.com/yymm/ergodoxfalseliang-sawoyu-ru:embed]&lt;/p&gt;
&lt;p&gt;Ergodox購入検討者向けのスライドなので参考になれば嬉しいです。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;こちらは自分のErgodoxについての紹介です …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 02 Jun 2016 00:57:55 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-06-02:/a2369958a9645eac52b58a8134e2ef5a.html</guid><category>Ergodox</category></item><item><title>一般的な提督の2016年春イベ</title><link>https://muunyblue.github.io/05d8cccb5f47e5072f0a05b5f514941a.html</link><description>&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/c228602ccdd5ff9743ac200b8ba1851c.png"&gt;&lt;/p&gt;
&lt;p&gt;※E-4攻略中&lt;/p&gt;
&lt;p&gt;一般的な提督は情報戦が勝負だと思うので入念に情報収集しながらやります。&lt;/p&gt;
&lt;p&gt;そしてすごい提督と違い戦力、装備、資材のリソースが限られています。この限られたリソースの中で如何に結果を最大化するか考えていきます。&lt;/p&gt;
&lt;h1&gt;札と出撃制限&lt;/h1&gt;
&lt;h2&gt;制限&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;E-1, E-4 …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 10 May 2016 05:27:22 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-05-10:/05d8cccb5f47e5072f0a05b5f514941a.html</guid><category>KanColle</category></item><item><title>Ergodox買おうの会【買いました】</title><link>https://muunyblue.github.io/a02ef8389f6d40f84b50504613117f88.html</link><description>&lt;p&gt;こんにちは、&lt;a href="https://gist.github.com/yymm/0ccbe5f129e10c72b978" title="Ergodox買おうの会"&gt;Ergodox買おうの会&lt;/a&gt;を身近な人と始めようと声をかけてみましたが、興味はあれど一緒に買ってくれる人がいなかったので、とりあえず買ってみました。&lt;/p&gt;
&lt;p&gt;購入までのことについてはgistにまとめてあります(購入の詳細、届くまでのこともコメント欄に書いてあります)。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gist.github.com/yymm/0ccbe5f129e10c72b978" title="Ergodox買おうの会"&gt;Ergodox買おうの会&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;※追記 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 14 Apr 2016 05:59:17 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-04-14:/a02ef8389f6d40f84b50504613117f88.html</guid><category>Ergodox</category></item><item><title>Ubuntu 14.04で"The package system is broken"を解決したいとき</title><link>https://muunyblue.github.io/4ba929900be728c9dc7d6007ecf00222.html</link><description>&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/5cf7b8a41aeb9a4ba4b8c1c49fa0c715.png"&gt;&lt;/p&gt;
&lt;p&gt;Ubuntuでこの赤いエラーが出たときの対処法です。&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;&lt;a href="http://askubuntu.com/questions/140246/how-do-i-resolve-unmet-dependencies-after-adding-a-ppa/142808#142808" title="apt - How do I resolve unmet dependencies after adding a PPA? - Ask Ubuntu"&gt;apt - How do I resolve unmet dependencies after adding …&lt;/a&gt;&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 12 Apr 2016 00:43:48 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-04-12:/4ba929900be728c9dc7d6007ecf00222.html</guid><category>Ubuntu</category></item><item><title>人生初GitHubでIssueをもらった話</title><link>https://muunyblue.github.io/5b9373fc169106c43c99cfae04989986.html</link><description>&lt;p&gt;[https://twitter.com/y_y_m_m/status/717902968066969601:embed]&lt;/p&gt;
&lt;h1&gt;hubot-dokkuを作っていた&lt;/h1&gt;
&lt;p&gt;軽い気持ちでslack上のhubotからdokkuをいじれないか試していました。&lt;/p&gt;
&lt;p&gt;dokku …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 07 Apr 2016 08:30:50 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-04-07:/5b9373fc169106c43c99cfae04989986.html</guid><category>Dokku</category><category>GitHub</category></item><item><title>プログラマになって5年経った</title><link>https://muunyblue.github.io/0a30a980e3540e51eb25423caa79f0cb.html</link><description>&lt;p&gt;都内のとある企業に入社して5年経ちました。&lt;/p&gt;
&lt;p&gt;こういうプログラマもいるというサンプル提示と振り返りをしてみようと思います。&lt;/p&gt;
&lt;h1&gt;入社当時のスキル&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;物理を学んでいた&lt;/li&gt;
&lt;li&gt;大学生のとき, FortranとC言語を使う授業の単位を取った&lt;/li&gt;
&lt;li&gt;C言語はメモ帳かnotepad++で書いていた&lt;/li&gt;
&lt;li&gt;独習Cを挫折した&lt;/li&gt;
&lt;li&gt;ポインタとは一体何なのか …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 29 Mar 2016 07:23:16 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-03-29:/0a30a980e3540e51eb25423caa79f0cb.html</guid><category>Poem</category></item><item><title>ブイズパ考察 ダブルバトル</title><link>https://muunyblue.github.io/c213877427b46fa96cff6c39e837ccee.html</link><description>&lt;h1&gt;パーティ考察&lt;/h1&gt;
&lt;p&gt;メンバー、アイテム、技構成考察。&lt;/p&gt;
&lt;p&gt;かっこかわいいブイズを見たい。いい感じに刺さってドヤ顔のブースター見たい。&lt;/p&gt;
&lt;p&gt;&lt;img alt="http://seiga.nicovideo.jp/seiga/im4836994" src="http://lohas.nicoseiga.jp//thumb/4836994i?"&gt;&lt;/p&gt;
&lt;p&gt;個別はこっち =&amp;gt; &lt;a href="http://blog.muuny-blue.info/39d4b545fb02556829aab1db805021c3.html" title="ブイズ考察 ダブルバトル"&gt;ブイズ考察 ダブルバトル&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;第1回 …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 15 Feb 2016 23:56:13 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-02-15:/c213877427b46fa96cff6c39e837ccee.html</guid><category>Pokemon</category></item><item><title>BitTorrentSyncをUbuntuで使う</title><link>https://muunyblue.github.io/4572101f572c37f203cd8690fe6e4eeb.html</link><description>&lt;p&gt;BitTorrentSyncは、クロスプラットフォームで使えて、しかもiOSやAndroidでも使えて便利なP2Pのデータ共有ツールです。&lt;/p&gt;
&lt;p&gt;Linuxでも使えて、Ubuntuユーザーなので使おうとしてみると、なんとGUIがなくWebUIしかない。~~あきらかにElectronやNW.jsのようなアプリなのに何故？！~~&lt;/p&gt;
&lt;p&gt;WebUIしかないけど使用感は同じなのでインストールして使ってみています。&lt;/p&gt;
&lt;h1&gt;インストール …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 15 Feb 2016 07:25:17 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-02-15:/4572101f572c37f203cd8690fe6e4eeb.html</guid><category>btsync</category><category>Ubuntu</category></item><item><title>ブイズ考察 ダブルバトル</title><link>https://muunyblue.github.io/39d4b545fb02556829aab1db805021c3.html</link><description>&lt;p&gt;&lt;strong&gt;※ORASレーティングダブル想定&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="http://seiga.nicovideo.jp/seiga/im4836994" src="http://lohas.nicoseiga.jp//thumb/4836994i?"&gt;&lt;/p&gt;
&lt;p&gt;ブイズパをつくろうと考えているので考察です。&lt;/p&gt;
&lt;p&gt;随時更新。&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ちなみに、ブースターが一番好きです。次点でブラッキー。グレイシアはかわいいけど冷たそう。&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;サンダース&lt;/h1&gt;
&lt;h2&gt;メガネ奇襲型 …&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 10 Feb 2016 05:58:24 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-02-10:/39d4b545fb02556829aab1db805021c3.html</guid><category>Pokemon</category><category>Buiz</category></item><item><title>VimでインデントのTabをプラグインを使わずそれなりに可視化する方法</title><link>https://muunyblue.github.io/b950ea26ca12daae142bd74dba4427c8.html</link><description>&lt;p&gt;&lt;img alt="" src="https://i.gyazo.com/a91ba956cc612c7f2098d342e029cdc4.png"&gt;&lt;/p&gt;
&lt;p&gt;ググるとプラグインを使う方法ばっかり出てきて、とりあえずプラグインを入れたけど、プラグインに依存しないでもそれなりにかっこよくできるのでそっちでいいやという話です。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;タブなどの見えない文字の可視化はlistを使うとできます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;set&lt;/span&gt; &lt;span class="nb"&gt;list&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;でひとまず見えますが、インデントは"^I"になって微妙です …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 15 Jan 2016 06:52:47 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-01-15:/b950ea26ca12daae142bd74dba4427c8.html</guid><category>Vim</category></item><item><title>docker-composeを使って最高の開発環境を手に入れた</title><link>https://muunyblue.github.io/7d128c1d4a33165a8676d1650d8ff828.html</link><description>&lt;p&gt;開発環境を作ってるの楽しい人種なので定期的に開発環境を見直したくなります。&lt;/p&gt;
&lt;p&gt;Dockerを使ってポータブルな開発環境を手に入れたので紹介します。&lt;/p&gt;
&lt;p&gt;開発用コンテナと各種データベースコンテナをdocker-composeを使って構築します。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;✗TOC&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;Dockerポータブルな開発環境&lt;/h1&gt;
&lt;p&gt;&lt;img alt="" src="https://slack-files.com/files-tmb/T02B7Q6RW-F0HAV7659-dfeef9aabc/screenshot_from_2015-12-25_16_17_28_360.png"&gt;&lt;/p&gt;
&lt;p&gt;"docker-compose up -d"で開発環境が出来上がります …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 13 Jan 2016 01:08:23 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-01-13:/7d128c1d4a33165a8676d1650d8ff828.html</guid><category>Docker</category></item><item><title>docker-composeでデータベースコンテナを立てるときのTips</title><link>https://muunyblue.github.io/9f067d8d6df2d4b8c64fb4c084d6c208.html</link><description>&lt;p&gt;docker-composeを使うと連携する複数のコンテナを割と簡単に構築できます。&lt;/p&gt;
&lt;p&gt;アプリケーションコンテナや開発用コンテナからデータベースコンテナを扱う際に気になったことをまとめてみます。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;✗TOC&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;データベースの永続化&lt;/h1&gt;
&lt;p&gt;データベース内のデータは永続化しないと消えてしまうので、残したい場合は明示的に永続化させておく必要があります。&lt;/p&gt;
&lt;p&gt;公式のイメージの設定例(redis, mysql …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 08 Jan 2016 02:36:05 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-01-08:/9f067d8d6df2d4b8c64fb4c084d6c208.html</guid><category>Docker</category><category>docker-compose</category></item><item><title>docker-composeでmysqlのデータ永続化したときのPermission Deniedの解決方法</title><link>https://muunyblue.github.io/e9074df9d70cb6f30fa378e92edbb490.html</link><description>&lt;p&gt;vagrant+VirtualBox上(Ubuntu)で、公式のmysqlイメージを使って、コンテナを立ててデータを永続化(ホストにマウント(data volume))したときのマイナートラブルです …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 07 Jan 2016 07:58:26 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2016-01-07:/e9074df9d70cb6f30fa378e92edbb490.html</guid><category>Docker</category><category>docker-compose</category></item><item><title>謝罪</title><link>https://muunyblue.github.io/a2ce8f1706e52936dfad516c23904e3e.html</link><description>&lt;p&gt;[https://twitter.com/yymm6666/status/678745733403553792:embed]&lt;/p&gt;
&lt;p&gt;[https://twitter.com …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 21 Dec 2015 01:18:54 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-12-21:/a2ce8f1706e52936dfad516c23904e3e.html</guid><category>SushiCorp</category></item><item><title>SushiCorpとは</title><link>https://muunyblue.github.io/f9209b7866c9f69823201c1732cc8645.html</link><description>&lt;p&gt;&lt;a href="http://www.adventar.org/calendars/942" title="Sushicorp Advent Calendar 2015 - Adventar"&gt;Sushicorp Advent Calendar 2015&lt;/a&gt;、7日目の記事です。&lt;/p&gt;
&lt;p&gt;SushiCorpについてぼく目線で簡単に紹介します。&lt;/p&gt;
&lt;h1&gt;SushiCorpとは&lt;/h1&gt;
&lt;p&gt;ぼく(&lt;a href="https://twitter.com/yymm6666/" title="(く﹏も) .｡oO (λ)(@yymm6666)さん | Twitter"&gt;@yymm6666&lt;/a&gt;)と …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 07 Dec 2015 00:41:09 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-12-07:/f9209b7866c9f69823201c1732cc8645.html</guid><category>SushiCorp</category></item><item><title>Sushiコマンド</title><link>https://muunyblue.github.io/0a7d7a81e8e3a20e4c34748e98ef45f6.html</link><description>&lt;p&gt;&lt;a href="http://www.adventar.org/calendars/942" title="Sushicorp Advent Calendar 2015 - Adventar"&gt;Sushicorp Advent Calendar 2015&lt;/a&gt;、2日目の記事です。&lt;/p&gt;
&lt;p&gt;寿司のことを考えながらコマンドを打っているとつい"sushi"と打ってしまいますね。自分にはよくあります。&lt;/p&gt;
&lt;p&gt;というわけで …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 02 Dec 2015 04:18:38 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-12-02:/0a7d7a81e8e3a20e4c34748e98ef45f6.html</guid><category>Sushicorp</category></item><item><title>IDCFクラウドで自分だけのHerokuを構築する</title><link>https://muunyblue.github.io/c3daba8ba04565423e12eb8cb6237b46.html</link><description>&lt;p&gt;&lt;a href="http://www.idcf.jp/cloud/cp/1st-present.html" title="IDCFクラウド１周年ありがとうキャンペーン！"&gt;IDCFクラウド１周年&lt;/a&gt;めでたいですね。&lt;/p&gt;
&lt;p&gt;この間からIDCFクラウドの最小インスタンスを借りて日々便利しています。&lt;/p&gt;
&lt;p&gt;個人用途で使っていたHerokuに乗せていたアプリをことごとくIDCFクラウドにのせ替えたので紹介します。個人用途なら最小インスタンスでも割りと快適です。&lt;/p&gt;
&lt;p&gt;その前に私の感じるIDCFの良さを紹介します。&lt;/p&gt;
&lt;h1&gt;IDCFの良さ&lt;/h1&gt;
&lt;h2&gt;選んだ理由&lt;/h2&gt;
&lt;p&gt;子供のお小遣いで済みそうなくらい安いVPSを探していて最終的に、DigitalOceanとIDCFで迷っていました …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Sun, 15 Nov 2015 06:11:54 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-15:/c3daba8ba04565423e12eb8cb6237b46.html</guid><category>IDCF</category><category>Dokku</category></item><item><title>toxを使って複数のPythonバージョンでCIしてカバレッジする方法</title><link>https://muunyblue.github.io/9523147e5a6707baf674941812ee5c94.html</link><description>&lt;p&gt;Pythonのプロジェクトでtoxを使って複数PythonバージョンでTravisCIしてCoverallsを使う方法です。&lt;/p&gt;
&lt;p&gt;手元ではPython3.5で開発して、2.xでも動くのかな？Coverageは大丈夫かな？という想いを全てをgit pushにのせていくスタイルです。&lt;/p&gt;
&lt;h1&gt;tox + TravisCI …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Nov 2015 07:43:08 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-12:/9523147e5a6707baf674941812ee5c94.html</guid><category>Python</category><category>CI</category></item><item><title>PyPIにパッケージを登録する必要最低限の流れ</title><link>https://muunyblue.github.io/f4d87ed3b0dbf9c79746d00cedbb5e78.html</link><description>&lt;p&gt;目次&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;PyPIにパッケージを登録してみたので流れをまとめました、詳しい説明は抜きで必要最低限のことだけをまとめてあります。&lt;/p&gt;
&lt;p&gt;主にPyPAの公式sampleprojectを参考にしています。&lt;/p&gt;
&lt;p&gt;[https://github.com/pypa/sampleproject …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Nov 2015 06:49:40 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-12:/f4d87ed3b0dbf9c79746d00cedbb5e78.html</guid><category>Python</category></item><item><title>Githubリポジトリにいっぱいバッジをつける方法</title><link>https://muunyblue.github.io/1ae5168b14a6091d623291902ac36e7c.html</link><description>&lt;p&gt;&lt;a href="https://travis-ci.org/yymm/mdx_embedly"&gt;&lt;img alt="Build Status" src="https://travis-ci.org/yymm/mdx_embedly.svg?branch=master"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://coveralls.io/github/yymm/mdx_embedly?branch=master"&gt;&lt;img alt="Coverage Status" src="https://coveralls.io/repos/yymm/mdx_embedly/badge.svg?branch=master&amp;amp;service=github"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/v/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/pyversions/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/wheel/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/format/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/implementation/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/status/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://pypi.python.org/pypi/mdx_embedly"&gt;&lt;img alt="PyPI" src="https://img.shields.io/pypi/dm/mdx_embedly.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://opensource.org/licenses/MIT"&gt;&lt;img alt="GitHub license" src="https://img.shields.io/badge/license-MIT-blue.svg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Pythonのリポジトリつけられそうなバッジです。&lt;/p&gt;
&lt;p&gt;主に、&lt;a href="http://shields.io/" title="Shields.io: Quality metadata badges for open source projects"&gt;Shields.io&lt;/a&gt;で作っています。&lt;/p&gt;
&lt;p&gt;すぐに作れるので紹介します。&lt;/p&gt;
&lt;h1&gt;Shields.io&lt;/h1&gt;
&lt;p&gt;[http://shields …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Nov 2015 04:54:56 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-12:/1ae5168b14a6091d623291902ac36e7c.html</guid><category>GitHub</category><category>Python</category></item><item><title>ASUS Zenfone2 laserの裏蓋を開ける方法</title><link>https://muunyblue.github.io/09ab23b6b607496f095feed7aaa1259b.html</link><description>&lt;p&gt;目次&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;IIJmioで音声通話付きSIMとZenfone2 lazerを購入しました。&lt;/p&gt;
&lt;p&gt;[https://twitter.com/yymm6666/status/664422645010579456 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 12 Nov 2015 00:41:31 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-12:/09ab23b6b607496f095feed7aaa1259b.html</guid><category>Phone</category></item><item><title>PelicanとPython-MarkdownでEmbedlyが使える便利なExtensionを作った</title><link>https://muunyblue.github.io/5747a0021eb349e9c8d3667cf1a5e9ec.html</link><description>&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/e38e37a99f7de1f45d169efcdb288dd1.html" title="埋め込み機能がほしい"&gt;埋め込み機能がほしい&lt;/a&gt;ので作りました。&lt;/p&gt;
&lt;p&gt;[https://github.com/yymm/mdx_embedly:embed]&lt;/p&gt;
&lt;p&gt;書式はよくあるembedの形式です。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[{&lt;/span&gt;URL …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 11 Nov 2015 09:11:52 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-11-11:/5747a0021eb349e9c8d3667cf1a5e9ec.html</guid><category>Python</category><category>Markdown</category><category>Pelican</category></item><item><title>Chrome46でDuet Displayの表示が乱れるのを治す方法</title><link>https://muunyblue.github.io/c9bc734c0663a142b7bec265098f8dbf.html</link><description>&lt;p&gt;Duet Displayを愛用しているのですが、Duet Display内のChromeの表示がv46で乱れる現象がありました。&lt;/p&gt;
&lt;p&gt;例えばGIGAZINEを開くとこうなってしまいました。&lt;/p&gt;
&lt;p&gt;&lt;img alt="GIGAAAAAAZINE" src="https://pbs.twimg.com/media/CRPOH6EUwAALixr.png"&gt;&lt;/p&gt;
&lt;h1&gt;治し方&lt;/h1&gt;
&lt;p&gt;&lt;a href="http://help.duetdisplay.com/faq/when-chrome-is-dragged-over-to-the-ipad-it-distorts-the-website" title="Duet Display — When Chrome is dragged over to the iPad it distorts the website."&gt;Duet Display — When Chrome …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 22 Oct 2015 01:04:42 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-22:/c9bc734c0663a142b7bec265098f8dbf.html</guid><category>Chrome</category><category>Duet Display</category></item><item><title>pyenvとvenvでPython3開発環境を整える</title><link>https://muunyblue.github.io/b3ddb7c5b10be95dbc3f9152c58becce.html</link><description>&lt;p&gt;Python3.3からvenvというのが入ってきてvirtualenvを置き換えられるという感じでしたが、日本語情報では色々不便という情報が多かったのでなんとなく敬遠していました。しかし、Python3.4からensurepipという便利なものがvenvで使えるようになって、煩わしさがなくなっているようなので使ってみました。&lt;/p&gt;
&lt;p&gt;※Python3.4以上を対象にしています。&lt;/p&gt;
&lt;h1&gt;pyenv …&lt;/h1&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 21 Oct 2015 05:52:22 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-21:/b3ddb7c5b10be95dbc3f9152c58becce.html</guid><category>Python</category></item><item><title>最近やりたさが高まってきていること</title><link>https://muunyblue.github.io/80a9efd37c62cbdee2351192983a43d6.html</link><description>&lt;p&gt;モチベーションを保つための個人的なメモである。&lt;/p&gt;
&lt;h1&gt;Cycle.js&lt;/h1&gt;
&lt;p&gt;Vue.jsで書いていたアプリを置き換えたい。&lt;/p&gt;
&lt;p&gt;Cycle.jsが肌に合わない場合はReact.jsを検討しようと思ってる。&lt;/p&gt;
&lt;h1&gt;Electron&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Windowsでビルドする方法とか …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 19 Oct 2015 07:54:42 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-19:/80a9efd37c62cbdee2351192983a43d6.html</guid><category>Mochi</category></item><item><title>Pelicanのブログにsitemapを追加する方法 - Python</title><link>https://muunyblue.github.io/fd9e2ae32b53addc06c63208be3aaa43.html</link><description>&lt;p&gt;&lt;a href="https://github.com/getpelican/pelican/wiki/Tips-n-Tricks#generate-sitemapxml" title="Tips n Tricks · getpelican/pelican Wiki"&gt;Tips n Tricks · getpelican/pelican Wiki&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;こちらに方法がのっていたので実践してみた。&lt;/p&gt;
&lt;h1&gt;sitemap.htmlを作成&lt;/h1&gt;
&lt;p&gt;使っているテーマのtemplatesにsitemap …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 15 Oct 2015 07:46:54 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-15:/fd9e2ae32b53addc06c63208be3aaa43.html</guid><category>Pelican</category><category>Python</category></item><item><title>Google Adsenseがあっさり通った(2015/10)</title><link>https://muunyblue.github.io/818cdcf067c824a4e34f9293de3b15a9.html</link><description>&lt;p&gt;Google Adsenseが通りました、なんかドキドキ、何日待てばいいのかなぁって思ってたら1日待ったら通っていました。&lt;/p&gt;
&lt;p&gt;色々Google Adsenseについて調べていると、申し込みの流れや審査の基準などが調べて出てきたのと違う場合が多かったです、古い情報は参考にならないことが多いので注意です。&lt;/p&gt;
&lt;h1&gt;通った様子&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;2015 …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 15 Oct 2015 05:40:09 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-15:/818cdcf067c824a4e34f9293de3b15a9.html</guid><category>Adsense</category></item><item><title>PelicanのTheme【作る編】 - Python</title><link>https://muunyblue.github.io/51fd081fb2f037078fc8a4e037daabe4.html</link><description>&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/4738a8f6fab937d899ae9631beab116f.html" title="PelicanのTheme【使う編】"&gt;前回&lt;/a&gt;は人の作ったThemeを使う話でしたが、今回は作る話です。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;目次&lt;/p&gt;
&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1&gt;Themeを作成する&lt;/h1&gt;
&lt;p&gt;Pelicanのドキュメントはとても親切でThemeを作る場合のことも書いてあります。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://docs.getpelican.com/en/3.6.3/themes.html" title="Creating themes — Pelican 3.6.3 documentation"&gt;Creating themes — Pelican …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 14 Oct 2015 07:55:17 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-14:/51fd081fb2f037078fc8a4e037daabe4.html</guid><category>Pelican</category><category>Python</category></item><item><title>PythonでMarkdownをGFM的に使う方法</title><link>https://muunyblue.github.io/234e5dc39dc52740524f9d863bec963c.html</link><description>&lt;p&gt;Pythonには、&lt;a href="http://daringfireball.net/projects/markdown/syntax" title="Daring Fireball: Markdown Syntax Documentation"&gt;Daring Fireball: Markdown&lt;/a&gt;を実装したMarkdownというパッケージがあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://pythonhosted.org/Markdown/index.html" title="Python Markdown"&gt;Python Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://pythonhosted.org/Markdown/reference.html" title="Library Reference — Python Markdown"&gt;Library Reference — Python …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 14 Oct 2015 05:15:11 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-14:/234e5dc39dc52740524f9d863bec963c.html</guid><category>Python</category><category>Pelican</category><category>Markdown</category></item><item><title>PelicanのTheme【使う編】- Python</title><link>https://muunyblue.github.io/4738a8f6fab937d899ae9631beab116f.html</link><description>&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/64517d8435994992e682b3e4aa0a0661.html" title="Pelicanでブログを始める最初の一歩"&gt;前回の記事&lt;/a&gt;でPelicanをgh-pagesにデプロイする方法を書きましたが、PelicanはThemeがデフォルトで2つしかなくてパッとしません。&lt;/p&gt;
&lt;p&gt;デフォルトのThemeをカスタムして使う方法から、Themeリポジトリを利用する方法をまとめました。&lt;/p&gt;
&lt;h1&gt;デフォルトのTheme&lt;/h1&gt;
&lt;p&gt;notmyideaというThemeがデフォルトで使用できます。もう一つ"simple"というThemaがありますが …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 14 Oct 2015 00:40:16 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-14:/4738a8f6fab937d899ae9631beab116f.html</guid><category>Pelican</category><category>Python</category></item><item><title>IT系主夫のエビチリ</title><link>https://muunyblue.github.io/281683d0650eb208fa2138978a675665.html</link><description>&lt;p&gt;ｸｯｸﾄﾞｩじゃないｴﾋﾞﾁﾘ。&lt;/p&gt;
&lt;p&gt;&lt;img alt="作ってみたエビチリの写真" src="https://i.gyazo.com/d60a4e18470073ff38edd0b46778c63e.png"&gt;&lt;/p&gt;
&lt;h1&gt;材料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;エビ200g&lt;/li&gt;
&lt;li&gt;たまねぎ中1&lt;/li&gt;
&lt;li&gt;長ネギ1本&lt;/li&gt;
&lt;li&gt;片栗粉大1&lt;/li&gt;
&lt;li&gt;酒大1&lt;/li&gt;
&lt;li&gt;塩・こしょう&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;合わせ調味料 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 13 Oct 2015 12:28:53 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-13:/281683d0650eb208fa2138978a675665.html</guid><category>Recipe</category></item><item><title>Pelicanでブログを始める最初の一歩 - Python</title><link>https://muunyblue.github.io/64517d8435994992e682b3e4aa0a0661.html</link><description>&lt;p&gt;PelicanはPython製の静的サイトジェネレータ。&lt;/p&gt;
&lt;p&gt;このブログもPelicanで作られています。&lt;/p&gt;
&lt;p&gt;Pelicanでgh-pagesにブログをデプロイする方法をまとめました。&lt;/p&gt;
&lt;h1&gt;Pelicanのインストールとセットアップ&lt;/h1&gt;
&lt;p&gt;Pythonをある程度触ったことのある人ならPelicanを使うのは簡単です。&lt;/p&gt;
&lt;p&gt;まず、Pelicanと必要なパッケージをインストールします。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ pip install pelican …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 13 Oct 2015 04:27:58 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-13:/64517d8435994992e682b3e4aa0a0661.html</guid><category>Pelican</category><category>Python</category></item><item><title>IT系主夫の塩麹鶏肉じゃが</title><link>https://muunyblue.github.io/08b7dc6e8b36bcaac15847827b7951a9.html</link><description>&lt;p&gt;肉じゃがが得意料理という女子力の高さ手に入れたかった。&lt;/p&gt;
&lt;p&gt;&lt;img alt="作ってみた塩麹鳥肉じゃがの写真" src="https://i.gyazo.com/719ea39d92291e50aa547bcddfd50e04.png"&gt;&lt;/p&gt;
&lt;h1&gt;材料&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;にんじん1&lt;/li&gt;
&lt;li&gt;じゃがいも中3&lt;/li&gt;
&lt;li&gt;たまねぎ1&lt;/li&gt;
&lt;li&gt;インゲン(お好みの量)&lt;/li&gt;
&lt;li&gt;鶏肉300g&lt;/li&gt;
&lt;li&gt;こんぶだし(500mlに対して必要な量 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 08 Oct 2015 01:53:35 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-08:/08b7dc6e8b36bcaac15847827b7951a9.html</guid><category>Recipe</category></item><item><title>Node.jsでささっとSPA始める個人的なメモ</title><link>https://muunyblue.github.io/bcf9d6bd14a2095866ce8c950b702341.html</link><description>&lt;p&gt;朝活#3&lt;/p&gt;
&lt;p&gt;※個人的なメモです、簡単なアプリしか想定していません。&lt;/p&gt;
&lt;p&gt;gulp, browserify, reactjs, coffee-script, sass(scss …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 05 Oct 2015 01:47:27 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-05:/bcf9d6bd14a2095866ce8c950b702341.html</guid><category>Asakatsu</category><category>Node.js</category></item><item><title>Goでnet/httpな簡単なJSON API</title><link>https://muunyblue.github.io/ebeb300882677f350ea818c8f333f5b9.html</link><description>&lt;p&gt;朝活#2&lt;/p&gt;
&lt;h1&gt;code&lt;/h1&gt;
&lt;p&gt;localhost:8080/jsonに向けてJSONをPOSTするとJSONが返ってきます。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt; &lt;span class="nx"&gt;main&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="s"&gt;&amp;quot;fmt …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 02 Oct 2015 04:12:43 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-02:/ebeb300882677f350ea818c8f333f5b9.html</guid><category>Asakatsu</category><category>Go</category></item><item><title>Haskellをはじめたい</title><link>https://muunyblue.github.io/749a8e6c231831ef7756db230b4359c8.html</link><description>&lt;p&gt;朝活#1&lt;/p&gt;
&lt;h1&gt;積読&lt;/h1&gt;
&lt;p&gt;おもしろそうだなーと思ってつい本を買う&lt;/p&gt;
&lt;p&gt;目次を読む&lt;/p&gt;
&lt;p&gt;へぇー&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;何かが起こる&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;本棚にしまう&lt;/p&gt;
&lt;p&gt;&lt;img alt="関数プログラミング 珠玉のアルゴリズムデザイン" src="https://i.gyazo.com/38375b27061721266f1dee6f856a83f0.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.amazon.co.jp/%E9%96%A2%E6%95%B0%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E7%8F%A0%E7%8E%89%E3%81%AE%E3%82%A2%E3%83%AB%E3%82%B4%E3%83%AA%E3%82%BA%E3%83%A0%E3%83%87%E3%82%B6%E3%82%A4%E3%83%B3-Richard-bird/dp/4274050645" title="Amazon.co.jp： 関数プログラミング 珠玉のアルゴリズムデザイン: Richard bird, 山下 伸夫: 本"&gt;Amazon.co …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Thu, 01 Oct 2015 01:01:28 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-10-01:/749a8e6c231831ef7756db230b4359c8.html</guid><category>Asakatsu</category><category>Haskell</category></item><item><title>一人アサカツ！しよう</title><link>https://muunyblue.github.io/d0f88bfbf93f5078ff06490082883764.html</link><description>&lt;p&gt;一人朝活。&lt;/p&gt;
&lt;h1&gt;経緯&lt;/h1&gt;
&lt;p&gt;最近朝9:00くらいに出社するようになったのだけど、出社してから一時間くらい進捗してないことに気づいた。&lt;/p&gt;
&lt;p&gt;仕事しても進捗がないので出社してから一時間くらい朝活をしてみようと思ったのです。&lt;/p&gt;
&lt;h1&gt;自分ルール&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;出社後1時間くらい(長くても11時くらいまで)だけ …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 30 Sep 2015 20:44:16 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-30:/d0f88bfbf93f5078ff06490082883764.html</guid><category>Asakatsu</category></item><item><title>lexとyaccで計算機</title><link>https://muunyblue.github.io/aad64398a969ec3186800d412fa7ab31.html</link><description>&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/f5cfbc876972bd0d031c8abc37344c28.html" title="プログラミング言語を作る前知識"&gt;前の記事(プログラミング言語を作る前知識)&lt;/a&gt;でプログラミング言語少し作れる気がしてきたので、lexとyaccに軽く触れてみた。&lt;/p&gt;
&lt;p&gt;実際はflexとbisonを使っている。&lt;/p&gt;
&lt;h1&gt;lexの書き方&lt;/h1&gt;
&lt;p&gt;lexのファイルには3つのブロックがあって、%%で区切って記述します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt; &lt;/span&gt;&lt;span class="nb"&gt;-------------------------------------------------------&lt;/span&gt;&lt;span class="c"&gt;&lt;/span&gt;
&lt;span class="c"&gt;| 定義部&lt;/span&gt;
&lt;span class="c"&gt;| オプションやincludeや変数宣言 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Tue, 29 Sep 2015 00:27:49 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-29:/aad64398a969ec3186800d412fa7ab31.html</guid><category>ProgrammingLanguage</category></item><item><title>プログラミング言語を作る前知識</title><link>https://muunyblue.github.io/f5cfbc876972bd0d031c8abc37344c28.html</link><description>&lt;p&gt;まったく何の知識もない状態で、プログラミング言語を作ることになったのでネット上をあさって前知識をまとめてみました。&lt;/p&gt;
&lt;p&gt;歴史から始まり最近のプログラミング言語の作り方、C言語で作る場合どうするのかまで書いてあります。&lt;/p&gt;
&lt;p&gt;(大体Wikipediaをまとめただけである)&lt;/p&gt;
&lt;h1&gt;むかしむかし&lt;/h1&gt;
&lt;p&gt;1940年に今でいうところのコンピュータが作られ、機械語→アセンブリ言語→アセンブリ言語のマクロというように発展しました …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 28 Sep 2015 00:12:42 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-28:/f5cfbc876972bd0d031c8abc37344c28.html</guid><category>ProgrammingLanguage</category></item><item><title>Youtubeの動画URLを取得するSwiftコードを書いた</title><link>https://muunyblue.github.io/0a7d83f084ec258aefd128569dda03d7.html</link><description>&lt;p&gt;Objective-Cだと以下のプロジェクトで、YoutubeからiOSで再生可能な形式の動画を取得して再生している。その中身の必要そうな部分をSwiftで書き直して使う話。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/hellozimi/HCYoutubeParser" title="hellozimi/HCYoutubeParser"&gt;hellozimi/HCYoutubeParser&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;http://www.youtube.com/get_video_info …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 25 Sep 2015 01:42:03 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-25:/0a7d83f084ec258aefd128569dda03d7.html</guid><category>Swift</category></item><item><title>出産後あって良かったものリスト</title><link>https://muunyblue.github.io/f69543a0f1b1c844dbd3eeee30ea0404.html</link><description>&lt;p&gt;この間、子どもが生まれました。&lt;/p&gt;
&lt;img alt="かわいい" src="https://i.gyazo.com/db93c9630d932f1c1887eb3f43675a96.png" style="width: 300px;" /&gt;
&lt;p&gt;かわいいですが、育児は大変です。&lt;/p&gt;
&lt;p&gt;夫目線ですが出産後あってよかった物リストをまとめてみました。(現在一ヶ月半)&lt;/p&gt;
&lt;div class="contents topic" id="contents"&gt;
&lt;p class="topic-title"&gt;Contents&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#section-1" id="toc-entry-1"&gt;らでぃっしゅぼーや&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#section-2" id="toc-entry-2"&gt;スリング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#section-3" id="toc-entry-3"&gt;ウォッシュレット …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Wed, 23 Sep 2015 05:50:37 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-23:/f69543a0f1b1c844dbd3eeee30ea0404.html</guid><category>育児</category></item><item><title>埋め込み機能がほしい</title><link>https://muunyblue.github.io/e38e37a99f7de1f45d169efcdb288dd1.html</link><description>&lt;hr&gt;
&lt;p&gt;作りました(2015/11/11)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.muuny-blue.info/5747a0021eb349e9c8d3667cf1a5e9ec.html" title="PelicanとPython-MarkdownでEmbedlyが使える便利なExtensionを作った"&gt;PelicanとPython-MarkdownでEmbedlyが使える便利なExtensionを作った&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twiterは以下のようになります。&lt;/p&gt;
&lt;p&gt;[https://twitter.com/yymm6666 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Mon, 21 Sep 2015 07:41:01 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-21:/e38e37a99f7de1f45d169efcdb288dd1.html</guid><category>Blog</category></item><item><title>IDCFクラウドの一番安いのでDokkuを使う</title><link>https://muunyblue.github.io/9375084629cd055e6b819053bc9714de.html</link><description>&lt;p&gt;(Dokku v0.3.26の話)&lt;/p&gt;
&lt;p&gt;Herokuで1日6時間止めたくないし、30分でスリーブしたくないアプリがあるとき、VPS on Dokkuは最高のソリューションかもしれないです。&lt;/p&gt;
&lt;p&gt;プロダクションには無理がありそうですが …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Sun, 20 Sep 2015 00:55:33 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-20:/9375084629cd055e6b819053bc9714de.html</guid><category>IDCF</category><category>Dokku</category></item><item><title>IDCFクラウド借りました</title><link>https://muunyblue.github.io/50982fb2f2cfa186d335310461dfa2be.html</link><description>&lt;h1&gt;経緯&lt;/h1&gt;
&lt;p&gt;今までGehirnを使っていたけど、&lt;a href="https://www.gehirn.jp/gis/rs2plan.html"&gt;Gehirnの料金体制の変更&lt;/a&gt;に伴い、VPSを変更することにしました。&lt;/p&gt;
&lt;p&gt;自分の場合、個人用途なのでアクセスも主に自分くらいしかないようなサービスしか動かさないのでとにかく安いVPSを探して使っています。&lt;/p&gt;
&lt;p&gt;旧Gehirnは300円(税抜) per …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Sat, 19 Sep 2015 00:27:54 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-19:/50982fb2f2cfa186d335310461dfa2be.html</guid><category>IDCF</category><category>VPS</category></item><item><title>もくもくブログを作りました</title><link>https://muunyblue.github.io/1f5f6ad95cc908a20bb7e30ee28a5958.html</link><description>&lt;p&gt;定期的な更新ができそうなブログができました。&lt;/p&gt;
&lt;h1&gt;自動&lt;/h1&gt;
&lt;p&gt;自動的な様子&lt;/p&gt;
&lt;p&gt;&lt;img alt="自動的な様子" src="https://i.gyazo.com/edf6e18931602c18ffbdedffd0446c05.png"&gt;&lt;/p&gt;
&lt;p&gt;このブログ自体はPelicanというPythonの静的サイドジェネレータで作られていて、MemoMemoというアプリを通して自動生成されています。&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/yymm/MemoMemo" title="yymm/MemoMemo"&gt;MemoMemo&lt;/a&gt;は、かねてからドックフーディングで作っていたWebアプリで、個人的なメモを残すアプリだったのですが、公開指定したメモをPelicanを使ってBlogにできるようにしました …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">yuya yano</dc:creator><pubDate>Fri, 18 Sep 2015 02:20:06 +0900</pubDate><guid isPermaLink="false">tag:muunyblue.github.io,2015-09-18:/1f5f6ad95cc908a20bb7e30ee28a5958.html</guid><category>Blog</category></item></channel></rss>